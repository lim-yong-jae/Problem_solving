#include<iostream>
#include<cstring>
#include<queue>
using namespace std;

int N, T, G;
bool table[100001];

int b_a(int n) {
	if (n + 1 > 99999)
		return -1;

	return n + 1;
}

int b_b(int n) {
	n *= 2;
	if (n > 99999)
		return -1; //불가능.

	char str[10];
	sprintf(str, "%d", n);
	int len = strlen(str);

	for (int i = 0; i < len; i++) {
		if (str[i] > '0')
			str[i] -= 1;
		return atoi(str);
	}
}

int main() {
	cin >> N >> T >> G;
	queue<int> q;
	q.push(N);

	for (int t = 0; t<=T; t++) {
		int size = q.size();
		if (size == 0) {
			break;
		}

		for (int i = 0; i < size; i++) {
			int prev = q.front();
			q.pop();

			if (prev == G) {
				cout << t;
				return 0;
			}

			int n = b_a(prev);
			if (n != -1) {
				if (table[n] == 0) {
					table[n] = 1;
					q.push(n);
				}
			}

			n = b_b(prev);
			if (n != -1) {
				if (table[n] == 0) {
					table[n] = 1;
					q.push(n);
				}
			}
		}
	}

	cout << "ANG";
	return 0;
}
