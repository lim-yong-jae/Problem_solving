#include<iostream>
#include<cstring>
#define ll long long
using namespace std;

int N;
char str[201];
ll dp[201][201];


ll dfs(int left, int right) {
	if ((right - left + 1) % 2 != 0)
		return 0; // 불가능.

	if (left >= right)
		return 1;

	if (dp[left][right] == -1) {
		dp[left][right] = 0;

		if (str[left] == '(') {
			for (int i = left + 1; i <= right; i += 2) {
				if (str[i] == ')' || str[i] == '?') {
					dp[left][right] += (dfs(left + 1, i - 1) * dfs(i + 1, right)) % 1000000;
				}
			}
		}
		else if (str[left] == '{') {
			for (int i = left + 1; i <= right; i += 2) {
				if (str[i] == '}' || str[i] == '?') {
					dp[left][right] += (dfs(left + 1, i - 1) * dfs(i + 1, right)) % 1000000;
				}
			}
		}
		else if (str[left] == '[') {
			for (int i = left + 1; i <= right; i += 2) {
				if (str[i] == ']' || str[i] == '?') {
					dp[left][right] += (dfs(left + 1, i - 1) * dfs(i + 1, right)) % 1000000;
				}
			}
		}
		else if (str[left] == '?') {
			for (int i = left + 1; i <= right; i += 2) {
				if (str[i] == '}' || str[i] == ']' || str[i] == ')') {
					dp[left][right] += (dfs(left + 1, i - 1) * dfs(i + 1, right)) % 1000000;
				}
				else if (str[i] == '?') {
					dp[left][right] += (dfs(left + 1, i - 1) * dfs(i + 1, right) * 3) % 1000000;
				}
			}
		}
	}

	return dp[left][right];
}

int main() {
	cin >> N;
	getchar();
	cin >> str;
	if (N % 2 == 1) {
		cout << '0';
		return 0;
	}
	memset(dp, -1, sizeof(dp));
	ll ret = dfs(0, N - 1);
	if (ret > 99999) {
		ret %= 100000;
		cout << ret / 10000;
		ret %= 10000;
		cout << ret / 1000;
		ret %= 1000;
		cout << ret / 100;
		ret %= 100;
		cout << ret / 10;
		ret %= 10;
		cout << ret;
	}
	else
		cout << ret;
	return 0;
}
