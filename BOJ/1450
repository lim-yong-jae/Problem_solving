#include<vector>
#include<iostream>
using namespace std;

typedef long long ll;

ll info[31];
int N, M;
vector<ll> v[2];

void dfs(int left, int right, ll sum, int state){
	if(left > right){
		if(sum != 0)
			v[state].push_back(sum);
			
		return;
	}
	
	dfs(left + 1, right, sum + info[left], state);
	dfs(left + 1, right, sum, state);
}

int main(){
	cin >> N >> M;
	for(int i=0;i<N; i++){
		cin >> info[i];
	}
	
	v[0].push_back(0);
	v[1].push_back(0);
	dfs(0, N/2-1, 0, 0);
	dfs(N/2, N-1, 0, 1);
	
	int ans = 0;
	int size = v[0].size();
	for(int i=0; i<size; i++){
		int len = v[1].size();
		
		for(int j=0; j<len; j++){
			if(v[0][i] + v[1][j] <=M){
				ans++;
			}
		}
	}
	
	cout << ans;
	return 0;
}
