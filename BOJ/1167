#include<iostream>
#include<vector>

using namespace std;

vector<pair<int, int>> vec[100001];
int v;
int visit[100001] = { 0, };
int l = 0;
int e = 0;

void DFS(int node, int length) {

	visit[node] = 1;
	if (l < length) {
		l = length;
		e = node;
	}

	for (int i = 0; i < vec[node].size(); i++) {
		if (!visit[vec[node][i].first]) {
			DFS(vec[node][i].first, vec[node][i].second + length);
		}
	}
}

int main() {

	scanf("%d", &v);

	int a = 0, b = 0, c = 0;;
	for (int i = 1; i <= v; i++) {
		scanf("%d", &a);
		while (1) {
			scanf("%d", &b);
			if (b == -1)
				break;
			scanf("%d", &c);
			vec[a].push_back(make_pair(b, c));
		}
	}
	DFS(1, 0);
	l = 0;
	for (int i = 1; i <= 100000; i++)
		visit[i] = 0;
	DFS(e, 0);

	cout << l << endl;
	return 0;
}
