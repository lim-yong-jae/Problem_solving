#include<iostream>
//#pragma warning(disable:4996)
using namespace std;

int N, M, K;
int table[32][11];
//방문 구성...

/*
 시간 복잡도-> O((H * N)^3)
 방문 기록이 필요

 */

bool test() {
	for (int i = 1; i <= N; i++) {
		int prev = i; //현재 위치.

		for (int j = 1; j <= K; j++) {
			if (table[j][prev] == 1) 
				prev += 1;
			else if(table[j][prev] == -1) 
				prev -= 1;
		}

		if (prev == i)
			continue;
		else
			return 0;
	}

	return 1;
}


int dfs(int n, int h) {
	//사다리를 n개 놓았고, h높이에 pos위치에 사다리를 놓자
	if (test())
		return n;
	if (n == 3)
		return 10000; //불가능.
	
	int ret = 100000;
	for (int i = h; i <= K; i++) { // 높이
		for (int j = 1; j <= N - 1; j++) { //번째.
			if (table[i][j] == 0 && table[i][j + 1] == 0) {
				table[i][j] = 1;
				table[i][j + 1] = -1;

				int cmp = dfs(n+1, i); // i높이에 j번째에 사다리를 놓음.

				ret = cmp < ret ? cmp : ret;
				table[i][j] = 0;
				table[i][j + 1] = 0;
			}
		}
	}
	
	return ret;
}


int main() {
	//freopen("input.txt", "r", stdin);
	cin >> N >> M >> K;
	for(int i = 0; i < M; i++){
		int a, b;
		cin >> a >> b;
		table[a][b] = 1; //시작. 
		table[a][b + 1] = -1; // 끝
		//visit[a][b] = 1;
	}

	int ret = dfs(0,1);
	if (ret <= 3)
		cout << ret;
	else
		cout << "-1";

	return 0;
}
