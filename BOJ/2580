#include<cstdio>
#include<vector>
using namespace std;

int check = 0;
int map[10][10] = { 0, };
bool h_table[10][10] = { 0, }; //행정보 저장.
bool c_table[10][10] = { 0, }; //열정보 저장
bool r_table[10][10] = { 0, }; //구간 정보 저장.
vector<pair<int, int>> v;

int range[9][4] = { 
	{1,3,1,3}, {1,3,4,6}, {1,3,7,9},
	{4,6,1,3}, {4,6,4,6,}, {4,6,7,9},
	{7,9,1,3}, {7,9,4,6 }, {7,9,7,9}
};

int dfs(int prev, int limit) {
	if (check == 1)
		return 0;

	if (prev == limit) {
		check = 1;
		for (int i = 1; i <= 9; i++) {
			for (int j = 1; j <= 9; j++) {
				printf("%d ", map[i][j]);
			}
			printf("\n");
		}
		return 0;
	}

	int i = v[prev].first;
	int j = v[prev].second;

	for (int k = 0; k < 9; k++) { //어느 구간인지.
		if (range[k][0] <= i && i <= range[k][1] && range[k][2] <= j && j <= range[k][3]) {
			for (int l = 1; l <= 9; l++) {
				if (r_table[k + 1][l] == 0) {
					if (h_table[i][l] == 0) {
						if (c_table[j][l] == 0) {
							r_table[k + 1][l] = 1;
							h_table[i][l] = 1;
							c_table[j][l] = 1;
							map[i][j] = l;

							dfs(prev+1, limit);
							if (check == 1)
								return 0;

							r_table[k + 1][l] = 0;
							h_table[i][l] = 0;
							c_table[j][l] = 0;
							map[i][j] = 0;
						}
					}
				}
			}
		}
	}

	return 0;
}


int main() {
	for (int i = 1; i <= 9; i++) {
		for (int j = 1; j <= 9; j++) {
			scanf("%d", &map[i][j]);
			if (map[i][j] == 0)
				v.push_back({ i,j });
			h_table[i][map[i][j]] = 1; //행정보 저장.
		}
	}
	//열정보 저장.
	for (int j = 1; j <= 9; j++) {
		for (int i = 1; i <= 9; i++) {
			c_table[j][map[i][j]] = 1;
		}
	}

	//구간 정보 저장
	for (int i = 0; i < 9; i++) {
		for (int j = range[i][0]; j <= range[i][1]; j++) {
			for (int k = range[i][2]; k <= range[i][3]; k++) {
				r_table[i + 1][map[j][k]] = 1;
			}
		}
	}
	
	dfs(0, v.size());
	return 0;
}
