#include<iostream>
#include<queue>
using namespace std;

struct state {
	int i;
	int j;
	int t; // 벽부순 횟수
};

int N, M, K;
int map[1001][1001];
bool table[1001][1001][11];
queue < struct state > q;
int dx[4] = { 0,0,1,-1 };
int dy[4] = { 1,-1,0,0 };

int main() {
	cin >> N >> M >> K;

	for (int i = 1; i <= N; i++)
		for (int j = 1; j <= M; j++)
			scanf("%1d", &map[i][j]);

	struct state s;
	s.i = 1;
	s.j = 1;
	s.t = 0;
	q.push(s);

	for (int t = 1;; t++) {
		int size = q.size();
		if (size == 0) break;

		for (int i = 0; i < size; i++) {
			struct state prev = q.front();
			q.pop();

			if (prev.i == N && prev.j == M) {
				cout << t;
				return 0;
			}

			for (int j = 0; j < 4; j++) {
				struct state next;
				next.i = prev.i + dx[j];
				next.j = prev.j + dy[j];

				if (next.i < 1 || next.i > N || next.j < 1 || next.j > M)
					continue;

				if (map[next.i][next.j] == 1)
					next.t = prev.t + 1;
				else
					next.t = prev.t;

				if (next.t > K) {}
				else {
					if (table[next.i][next.j][next.t] != 1) {
						table[next.i][next.j][next.t] = 1;
						q.push(next);
					}
				}
			}
		}
	}

	cout << "-1";
	return 0;
}
