#include <iostream>
#include<utility>
#include<algorithm>
#include<queue>
using namespace std;

int N;
pair<int,int> info[100001];

bool compare(pair<int,int> p1, pair<int,int> p2){
	if(p1.first == p2.first)
		return p1.second < p2.second;
	return p1.first < p2.first;
}

struct comp{
	bool operator()(int a, int v){
		return a > v;
	}
};

int main() {
	ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
	cin >> N;
	for(int i=0; i<N; i++){
		int a, b, c;
		cin >> a >> b >> c;
		info[i].first = b;
		info[i].second = c;
	}
	
	sort(info, info+N, compare);
	
	priority_queue<int, vector<int>, comp> q;
	q.push(0);
	
	for(int i=0; i<N; i++){
		int t = q.top();
		q.pop();
		
		if(info[i].first >= t){
			t = info[i].second;
			q.push(t);
		}else{
			q.push(t);
			q.push(info[i].second);
		}
	}
	
	
	cout << q.size();
	return 0;
}
