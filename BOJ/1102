#include<iostream>
#include<cstring>
using namespace std;

int N,M;
int map[17][17];
bool table[17];
int dp[17][1 << 16];

int dfs(int state, int cnt) {
	//state 현재 켜져있는 상태, cnt은 얼마나 더 켜야 하는지..
	if (cnt >= M)
		return 0;

	if (dp[cnt][state] == -1) {
		dp[cnt][state] = 10000000000;
		int ret = 0;

		for (int i = 0; i < N; i++) {
			if (table[i] == 1) {
				//켜져있는 상태.
				for (int j = 0; j < N; j++) {
					if (table[j] == 0) {
						table[j] = 1;
						ret = dfs(state + (1 << j), cnt + 1) + map[i][j];
						dp[cnt][state] = ret > dp[cnt][state] ? dp[cnt][state] : ret;
						table[j] = 0;
					}
				}
			}
		}
	}

	return dp[cnt][state];
}

int main() {
	cin >> N;

	for (int i = 0; i < N; i++)
		for (int j = 0; j < N; j++)
			cin >> map[i][j]; //비용 i -> j을 키기 위한.

	getchar();
	char str[18];
	cin >> str;
	int cnt = 0, len = strlen(str), start = 0;
	for (int i = 0; i < len; i++) {
		if (str[i] == 'Y') {
			cnt++;
			table[i] = 1;
			start += (1 << i);
		}
	}

	cin >> M;
	memset(dp, -1, sizeof(dp));

	if (cnt == 0 && M != 0)
		cout << -1;
	else
		cout << dfs(start, cnt);
		

	return 0;
}
