#include<iostream>
using namespace std;

int N, M, T;
int info[5001] = {0,};
int dp[5001][5001] = {0,};

int dfs(int left, int right){
	if(left <=0 || right > N){
		return 0;
	}
	
	if(dp[left][right] == -1){
		//일치 개수
		int ret = 0;
		dp[left][right] = 0;
		
		if(info[left] == info[right]){
			ret = 1 + dfs(left-1, right+1);
			dp[left][right] = dp[left][right] < ret ? ret : dp[left][right];
		}else{
			ret = dfs(left-1, right);
			dp[left][right] = dp[left][right] < ret ? ret : dp[left][right];
			ret = dfs(left, right + 1);
			dp[left][right] = dp[left][right] < ret ? ret : dp[left][right];
		}
	}
	
	return dp[left][right];
}


int main(){
	cin >> N;
	for(int i=1; i<=N; i++){
		cin >> info[i];
	}
	
	for(int i=1; i<=N; i++){
		for(int j=1; j<=N; j++){
			dp[i][j] = -1;
		}
	}
	
	cin >> T;
	for(int t=0; t<T; t++){
		cin >> M;
		
		int ret = dfs(M-1, M+1);
		cout << N - (1+ret*2) << '\n';
	}
	
	return 0;
}
