#include<iostream>
#include<utility>
#include<algorithm>
using namespace std;
 
const int INF = 2100000000;
const int n_ = 300003;
 
pair<int,int> info[n_];
int dp[n_];
int N, M;
 
bool compare(pair<int,int> p1, pair<int,int> p2){
	if(p1.first == p2.first)
		return p1.second > p2.second;
 
	return p1.first < p2.first;
}
 
 
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
	cin >> N >> M;
	for(int i=0; i<N; i++){
		cin >> info[i].first >> info[i].second;
	}
	sort(info, info+N, compare);
 
	for(int i=0; i<N; i++){
		dp[i] = info[i].second;
		if(i != 0)
			dp[i] = dp[i] < dp[i-1] ? dp[i-1] : dp[i];
		
		pair<int,int> f;
		f.first = info[i].first - M;
		f.second = 0;
		int idx = upper_bound(info, info + i, f, compare) - info;
		if(idx != 0)
			dp[i] = dp[i] < dp[idx-1] + info[i].second ? dp[idx-1] + info[i].second : dp[i];
	}
 
	cout << dp[N-1];
	return 0;
}
